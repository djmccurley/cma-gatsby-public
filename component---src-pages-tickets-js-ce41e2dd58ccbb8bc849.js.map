{"version":3,"sources":["webpack:///./src/pages/tickets.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["TicketList","props","_this","_React$Component","call","this","state","error","isLoaded","outlets","componentDidMount","_this2","fetch","then","res","json","data","setState","render","_this$state","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","message","map","item","key","title","phone","address","href","url","payment","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","React","Component","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","propTypes","shape","pathname"],"mappings":"8IAGMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,QAAS,IALMP,sCASnBQ,kBAAA,WAAoB,IAAAC,EAAAN,KAClBO,MAAM,sBACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACEL,EAAKM,SAAS,CACZT,UAAU,EACVC,QAASO,KAGb,SAAAT,GACEI,EAAKM,SAAS,CACZT,UAAU,EACVD,eAMVW,OAAA,WAAS,IAAAC,EAC8Bd,KAAKC,MAAlCC,EADDY,EACCZ,MAAOC,EADRW,EACQX,SAAUC,EADlBU,EACkBV,QACzB,OAAIF,EACKa,EAAAC,EAAAC,cAAA,qBAAaf,EAAMgB,SAChBf,EAIRY,EAAAC,EAAAC,cAAA,WACGb,EAAQe,IAAI,SAAAC,GAAI,OACfL,EAAAC,EAAAC,cAAA,OAAKI,IAAKD,EAAKE,OACbP,EAAAC,EAAAC,cAAA,UAAKG,EAAKE,OACVP,EAAAC,EAAAC,cAAA,SAAIG,EAAKG,OACTR,EAAAC,EAAAC,cAAA,SAAIG,EAAKI,SACTT,EAAAC,EAAAC,cAAA,KAAGQ,KAAML,EAAKM,KAAMN,EAAKM,KACzBX,EAAAC,EAAAC,cAAA,SAAIG,EAAKO,YAGbZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAG,KAAT,iBAbGd,EAAAC,EAAAC,cAAA,6BAlCYa,IAAMC,WAsDhBpC,iCCzDf,IAAsBqC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,IAAAM,EAAAN,EAAAE,EAAAG,GAAAL,EAAAO,EAAAC,EAAA,sBAAAF,EAAA5B,IAAAsB,EAAA,KAa2BR,IAAMiB,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,gGClEhBC,EAAmB,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGE1B,IAAMb,cAAcwC,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAc9C,OALV,MASX2C,EAAiBO,UAAY,CAC3BL,SAAUP,IAAUa,MAAM,CACxBC,SAAUd,IAAUE,OAAOC,aAC1BA,YAGUE","file":"component---src-pages-tickets-js-ce41e2dd58ccbb8bc849.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass TicketList extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: null,\n      isLoaded: false,\n      outlets: [],\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"/json/outlets.json\")\n      .then(res => res.json())\n      .then(\n        data => {\n          this.setState({\n            isLoaded: true,\n            outlets: data,\n          })\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error,\n          })\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, outlets } = this.state\n    if (error) {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <div>Loading...</div>\n    } else {\n      return (\n        <div>\n          {outlets.map(item => (\n            <div key={item.title}>\n              <h3>{item.title}</h3>\n              <p>{item.phone}</p>\n              <p>{item.address}</p>\n              <a href={item.url}>{item.url}</a>\n              <p>{item.payment}</p>\n            </div>\n          ))}\n          <Link to=\"/\">Go Back home</Link>\n        </div>\n      )\n    }\n  }\n}\n\nexport default TicketList\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}